apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-dev
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-dev
  template:
    metadata:
      labels:
        app: app-dev
    spec:
      securityContext:
        runAsUser: 7999
        runAsGroup: 7999
        fsGroup: 7999
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: app-dev
          image: polinetwork/polifemo_backend_dev:7a168f1e1b5ae47ff90577583e6a6e03f28dd2cc
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /config
          resources:
            requests:
              cpu: "100m"
              memory: "300Mi"
            limits:
              cpu: "300m"
              memory: "500Mi"
          ports:
            - containerPort: 5000
          env:
            - name: BASE_PATH
              value: "/staging/v1/"
          args:
            - --base-path=/staging/v1/
      volumes:
        - name: config
          secret:
            secretName: app-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: app-dev-service
  labels:
    app: app-dev
spec:
  type: ClusterIP
  ports:
    - name: app-port
      port: 8000
      targetPort: 5000
  selector:
    app: app-dev
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-dev-ingress
  annotations:
    kubernetes.io/ingress.class: "addon-http-application-routing"
    cert-manager.io/cluster-issuer: "letsencrypt-prod-issuer"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /staging/v1/$2
spec:
  tls:
    - hosts:
        - api.polinetwork.org
      secretName: app-dev-tls
  rules:
    - host: api.polinetwork.org
      http:
        paths:
          - path: /staging/v1(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: app-dev-service
                port:
                  number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld  
  namespace: app-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld
  template:
    metadata:
      labels:
        app: aks-helloworld
    spec:
      containers:
      - name: aks-helloworld
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "Welcome to Azure Kubernetes Service (AKS)"
---
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld
  namespace: app-dev
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: aks-helloworld
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aks-helloworld
  namespace: app-dev
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: api.polinetwork.org
    http:
      paths:
      - backend:
          service:
            name: aks-helloworld
            port:
              number: 80
        path: /
        pathType: Prefix
