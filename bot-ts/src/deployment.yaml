apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot-ts-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: bot-ts-redis
  template:
    metadata:
      labels:
        app: bot-ts-redis
    spec:
      containers:
        - name: bot-ts-redis
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          resources:
            limits:
              memory: "400Mi"
            requests:
              cpu: "50m"
              memory: "400Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: bot-ts-redis-service
spec:
  selector:
    app: bot-ts-redis  # Match the labels of your Redis deployment
  ports:
    - protocol: TCP
      port: 6379  # The port the service exposes
      targetPort: 6379 # The port Redis is listening on inside the container
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: bot-ts-spc
  namespace: bot-ts
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: "31ef9b42-b1c6-4bbc-bbce-3cf2faa1c8cb"
    tenantId: "7f8cafc8-4314-4070-9744-fe02f91bcb21"
    keyvaultName: "kv-polinetwork"
    objects: |
      array:
        - |
          objectName: bot-ts-token            
          objectType: secret
  secretObjects:
    - secretName: azure-kv
      type: Opaque
      data:
        - objectName: bot-ts-token
          key: bot-token
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bot-ts
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: bot-ts
  template:
    metadata:
      labels:
        app: bot-ts
    spec:
      containers:
        - name: bot-ts
          image: ghcr.io/polinetworkorg/telegram@sha256:aa7203181e578cbc48e9fe1c8a011dc89f49f7a21137be6124051f727bb814fb
          imagePullPolicy: IfNotPresent
          env:
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: azure-kv
                  key: bot-token
            - name: BACKEND_URL
              value: "backend-service.backend.svc.cluster.local:3000"
            - name: REDIS_HOST
              value: "bot-ts-redis-service.bot-ts.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"
          volumeMounts:
            - name: secrets-store
              mountPath: /mnt/secrets-store
              readOnly: true
            - name: redis-pvc
              mountPath: /data
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              memory: "200Mi"
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "bot-ts-spc"
        - name: redis-pvc
          persistentVolumeClaim:
            claimName: redis-pvc
