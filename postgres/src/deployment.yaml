apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: postgres-spc
  namespace: postgres
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: "31ef9b42-b1c6-4bbc-bbce-3cf2faa1c8cb"
    tenantId: "7f8cafc8-4314-4070-9744-fe02f91bcb21"
    keyvaultName: "kv-polinetwork"
    objects: |
      array:
        - |
          objectName: postgres-root-user
          objectType: secret
        - |
          objectName: postgres-root-password
          objectType: secret
  secretObjects:
    - secretName: azure-kv
      type: Opaque
      data:
        - objectName: postgres-root-user
          key: db-user
        - objectName: postgres-root-password
          key: db-pass
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  type: LoadBalancer
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:17.4'
          imagePullPolicy: IfNotPresent
          restart: always
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_DB
            value: default
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: azure-kv
                key: db-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-kv
                key: db-pass
                optional: false
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
            - name: secrets-store
              mountPath: /var/run/secrets-store
              readOnly: true
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "bot-prod-spc"

