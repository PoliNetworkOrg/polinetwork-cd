apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: postgres-spc
  namespace: postgres
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: "31ef9b42-b1c6-4bbc-bbce-3cf2faa1c8cb"
    tenantId: "7f8cafc8-4314-4070-9744-fe02f91bcb21"
    keyvaultName: "kv-polinetwork"
    objects: |
      array:
        - |
          objectName: postgres-root-user
          objectType: secret
        - |
          objectName: postgres-root-password
          objectType: secret
        - |
          objectName: pgadmin-email
          objectType: secret
        - |
          objectName: pgadmin-password
          objectType: secret
  secretObjects:
    - secretName: azure-kv
      type: Opaque
      data:
        - objectName: postgres-root-user
          key: db-user
        - objectName: postgres-root-password
          key: db-pass
        - objectName: pgadmin-email
          key: pgadmin-email
        - objectName: pgadmin-password
          key: pgadmin-password
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-static
  resources:
    requests:
      storage: 20
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  type: LoadBalancer
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
  labels:
    app: pgadmin
spec:
  type: LoadBalancer
  ports:
    - name: pgadmin
      port: 80
      targetPort: 80
  selector:
    app: pgadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:17.4"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: default
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: azure-kv
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: azure-kv
                  key: db-pass
                  optional: false
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
              subPath: postgresdata
            - name: secrets-store
              mountPath: /var/run/secrets-store
              readOnly: true
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "postgres-spc"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: "dpage/pgadmin4:8"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: azure-kv
                  key: pgadmin-email
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: azure-kv
                  key: pgadmin-password
                  optional: false
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
          volumeMounts:
            - mountPath: /var/lib/pgadmin
              name: pgadmin-data
            - name: secrets-store
              mountPath: /var/run/secrets-store
              readOnly: true
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin-pvc
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "postgres-spc"